{"version":3,"sources":["types/types.js","actions/auth.js","actions/phrases.js","actions/ui.js","components/ui/AddButton.jsx","components/ui/CardPhrase.jsx","hooks/useForm.js","components/ui/Modal.jsx","components/ui/ModalUpdate.jsx","components/ui/Navbar.jsx","components/home/HomeScreen.jsx","components/home/MyPhrases.jsx","components/home/MyProfile.jsx","components/home/MySaves.jsx","components/home/MyAccount.jsx","components/ui/Footer.jsx","components/user/UserScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.jsx","reducers/authReducer.js","reducers/phrasesReducer.js","reducers/uiReducer.js","store/store.js","FrasesApp.jsx","index.js"],"names":["types","login","data","type","payload","checkingFinish","startLogout","dispatch","localStorage","clear","logout","logoutPhrases","changeName","startCreateNewJWT","newName","getState","a","options","headers","getItem","axios","post","process","uid","auth","name","email","resp","ok","setItem","newToken","startGetAllPhrases","get","getAllPhrases","msg","reverse","deletePhrase","phraseId","startGetAllUserPhrases","getAllUserPhrases","frases","startRemoveSavedPhrase","put","Swal","fire","startGetAllSavedPhrases","getAllSavedPhrases","savedPhrases","closePhraseModal","closeUpdatePhraseModal","AddButton","useDispatch","motion","button","className","onClick","whileTap","scale","whileHover","CardPhrase","phrase","date","username","userId","useSelector","state","useEffect","AOS","init","refresh","usernameAxios","useRef","undefined","then","res","current","catch","err","console","log","newDate","moment","format","profileUrl","to","title","text","icon","showCancelButton","cancelButtonText","confirmButtonText","result","isConfirmed","delete","startDeletePhrase","navigator","clipboard","writeText","startSavePhrase","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","Modal","formValues","chars","setChars","disabled","setDisabled","length","onSubmit","e","preventDefault","Date","getTime","createNewPhrase","placeholder","onChange","ModalPortal","ReactDOM","createPortal","document","getElementById","ModalUpdate","selectedToUpdate","ui","phraseToUpdate","startUpdateUserPhrase","Navbar","click","setClick","closeMobileMenu","pathname","useLocation","handleLogout","div","li","HomeScreen","phrases","modal","updateModal","map","user","_id","MyPhrases","userPhrases","MyProfile","newPassword","nameIsOpen","setNameIsOpen","passwordIsOpen","setPasswordIsOpen","toLowerCase","startChangeName","autoComplete","password","MySaves","checking","setChecking","userSavedPhrases","MyAccount","location","setLocation","Footer","href","getFullYear","UserScreen","id","useParams","setState","src","alt","LoginScreen","test","token","startLogin","RegisterScreen","password1","password2","indexOf","startRegister","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","userPhrase","store","createStore","applyMiddleware","thunk","FrasesApp","render"],"mappings":"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","file":"static/js/main.cbd1e409.chunk.js","sourcesContent":["export const types = {\r\n\r\n\r\n    uiOpenPhraseModal : \"[ui] Abrir Modal Creación\",\r\n    uiClosePhraseModal : \"[ui] Cerrar Modal Creación\",\r\n    uiOpenUpdatePhraseModal: \"[ui] Abrir Modal Actualización\",\r\n    uiCloseUpdatePhraseModal: \"[ui] Cerrar Modal Actualización\",\r\n    uiGetPhraseToModal: \"[ui] Obtener Frase Actual Modal Actualización\",\r\n\r\n    authCheckingFinish: \"[auth] Fin Revisión Token\",\r\n    authLogin: \"[auth] Iniciar Sesión\",\r\n    authLogout: \"[auth] Cerrar Sesión\",\r\n    authChangeName: \"[auth] Cambiar Nombre\",\r\n\r\n    phrasesGetAll: \"[phrases] Obtener Frases\",\r\n    phrasesDeletedPhrase: \"[phrases] Eliminar Frase\",\r\n    phrasesGetAllUser: \"[phrases] Obtener Frases Usuario\",\r\n    phrasesLogout: \"[phrases] Cerrar Sesión Borrar Frases Estado\",\r\n    phrasesGetSaved: \"[phrases] Obtener Frases Guardadas Usuario\"\r\n\r\n}","import axios from \"axios\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async(dispatch) => {\r\n        const resp = await axios.post(`${process.env.REACT_APP_API_URL}/auth/new-user`,{\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n        if( resp.data.ok ){\r\n            localStorage.setItem('token', resp.data.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            Swal.fire('¡Hola!', 'Bienvenid@ a la comunidad', 'success');\r\n\r\n            dispatch( login({\r\n                uid: resp.data.uid,\r\n                name: resp.data.name,\r\n                email: resp.data.email\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('Error', resp.data.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await axios.post(`${process.env.REACT_APP_API_URL}/auth/`,{\r\n            email,\r\n            password,\r\n        })\r\n        if( resp.data.ok ){\r\n            localStorage.setItem('token', resp.data.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            Swal.fire('¡Es un gusto tenerte aquí de nuevo! 👻');\r\n\r\n            dispatch( login({\r\n                uid: resp.data.uid,\r\n                name: resp.data.name,\r\n                email: resp.data.email\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', 'Datos incorrectos', 'error')\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( data ) => ({\r\n    type: types.authLogin,\r\n    payload: data\r\n})\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        //se manda el contenido del LS y verifica si hay token, si hay y es válido lo renueva e inicia sesión, si no hay no deja ingresar\r\n        const resp = await axios.get(`${process.env.REACT_APP_API_URL}/auth/renew`, {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if( resp.data.ok ){\r\n            localStorage.setItem('token', resp.data.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: resp.data.uid,\r\n                name: resp.data.name,\r\n                email: resp.data.email\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( logoutPhrases() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout})\r\n\r\nconst logoutPhrases = () => ({\r\n    type: types.phrasesLogout\r\n})\r\n\r\nexport const startChangeName = ( name ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const resp = await axios.put(`${process.env.REACT_APP_API_URL}/user/change-name/${getState().auth.uid}`, {\r\n            name\r\n        }, options);\r\n        if( resp.data.ok ){\r\n            dispatch( changeName( resp.data.msg.name ) )\r\n            Swal.fire('Tu nombre ha sido cambiado', '', 'success')\r\n            dispatch( startCreateNewJWT( resp.data.msg.name ) )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst changeName = ( data ) => ({\r\n    type: types.authChangeName,\r\n    payload: data\r\n})\r\n\r\nexport const startChangePassword = ( password ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const resp = await axios.put(`${process.env.REACT_APP_API_URL}/user/change-password/${getState().auth.uid}`, {\r\n            password\r\n        }, options);\r\n        if( resp.data.ok ){\r\n            Swal.fire( resp.data.msg, 'Vuelve a iniciar sesión', \"success\" );\r\n            dispatch( startLogout() );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//crea un nuevo JWT cuando el nombre es actualizado en el startChangeName\r\nconst startCreateNewJWT = ( newName ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        //crear un nuevo JWT con el nuevo nombre que actualizó el usuario\r\n         const resp = await axios.post(`${process.env.REACT_APP_API_URL}/auth/renew-change-name`, {\r\n            uid: getState().auth.uid,\r\n            name: newName,\r\n            email: getState().auth.email\r\n        } , options);\r\n        if( resp.data.ok ){\r\n            localStorage.setItem('token', resp.data.newToken)\r\n        }\r\n    }\r\n}","import axios from \"axios\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startGetAllPhrases = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await axios.get(`${process.env.REACT_APP_API_URL}/phrases/get`, {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        if( resp.data.ok ){\r\n            dispatch( getAllPhrases( resp.data.msg.reverse() ) )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst getAllPhrases = (data) => ({ \r\n    type: types.phrasesGetAll,\r\n    payload: data\r\n})\r\n\r\nexport const createNewPhrase = ( phrase ) => {\r\n    return async (dispatch) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const resp = await axios.post(`${process.env.REACT_APP_API_URL}/phrases/create`,\r\n        {\r\n            phrase,\r\n            date: new Date().getTime()\r\n        },options)\r\n\r\n        if( resp.data.ok ){\r\n            dispatch( startGetAllPhrases() );\r\n            Swal.fire('Frase creada ✔');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startDeletePhrase = ( phraseId ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        Swal.fire({\r\n            title: '¿Deseas eliminar esta frase?',\r\n            text: \"Si lo haces no podrás recuperarla\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            // cancelButtonColor: '#d33',\r\n            cancelButtonText: 'No, cancelar',\r\n            // confirmButtonColor: '#3085d6',\r\n            confirmButtonText: 'Si, eliminar'\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios.delete(`${process.env.REACT_APP_API_URL}/phrases/delete/${phraseId}`,\r\n                {\r\n                    headers: {\r\n                        'x-token': localStorage.getItem('token'),\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                .then( res => {\r\n                    if( res.data.ok ){\r\n                        dispatch( deletePhrase( phraseId ) );\r\n                        Swal.fire('Frase eliminada 🗑');\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst deletePhrase = ( phraseId ) => ({\r\n    type: types.phrasesDeletedPhrase,\r\n    payload: phraseId\r\n});\r\n\r\n\r\nexport const startGetAllUserPhrases = () => {\r\n    return async (dispatch,getState) => {\r\n        const resp = await axios.get(`${process.env.REACT_APP_API_URL}/user/${getState().auth.uid}`,{\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if( resp.data.ok ){\r\n            dispatch( getAllUserPhrases( resp.data.frases.reverse() ) )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst getAllUserPhrases = ( data ) => ({\r\n    type: types.phrasesGetAllUser,\r\n    payload: data\r\n})\r\n\r\nexport const startUpdateUserPhrase = ( phraseToUpdate ) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const resp = await axios.put(`${process.env.REACT_APP_API_URL}/phrases/put/${getState().ui.selectedToUpdate.phraseId}`, {\r\n            phrase: phraseToUpdate,\r\n            date: new Date().getTime()\r\n        }, options)\r\n        if( resp.data.ok ){\r\n            //o se actualizan los datos en redux o simplemente hacemos otra llamada a startGetAllPhrases Y startGetAllUserPhrases\r\n            Swal.fire('Frase actualizada', '', 'success');\r\n            dispatch( startGetAllPhrases() );\r\n            dispatch( startGetAllUserPhrases() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startSavePhrase = ( phraseId ) => {\r\n    return async (dispatch) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const resp = await axios.put(`${process.env.REACT_APP_API_URL}/user/put-new-phrase`,{\r\n            phraseId\r\n        }, options)\r\n        if( resp.data.ok ){\r\n            Swal.fire( resp.data.msg );\r\n            dispatch( startGetAllSavedPhrases() );\r\n        }else {\r\n            dispatch( startRemoveSavedPhrase( phraseId ) )\r\n        }\r\n    }\r\n}\r\n\r\nconst startRemoveSavedPhrase = ( phraseId ) => {\r\n    return async (dispatch) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const resp = await axios.put(`${process.env.REACT_APP_API_URL}/user/put-phrase`,{\r\n            phraseId\r\n        }, options)\r\n        if( resp.data.ok ){\r\n            Swal.fire( resp.data.msg );\r\n            dispatch( startGetAllSavedPhrases() );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetAllSavedPhrases = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const resp = await axios.get(`${process.env.REACT_APP_API_URL}/user/get-saved-phrases/${getState().auth.uid}`, {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        if( resp.data.ok ){\r\n            dispatch( getAllSavedPhrases( resp.data.savedPhrases.reverse() ) )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst getAllSavedPhrases = ( data ) => ({\r\n    type: types.phrasesGetSaved,\r\n    payload: data\r\n})","import { types } from \"../types/types\";\r\n\r\nexport const openPhraseModal = () => ({\r\n    type: types.uiOpenPhraseModal\r\n})\r\n\r\n\r\nexport const closePhraseModal = () => ({\r\n    type: types.uiClosePhraseModal\r\n})\r\n\r\nexport const openUpdatePhraseModal = ( data ) => ({\r\n    type: types.uiOpenUpdatePhraseModal,\r\n    payload: data\r\n})\r\n\r\n\r\nexport const closeUpdatePhraseModal = () => ({\r\n    type: types.uiCloseUpdatePhraseModal\r\n})\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux'\r\nimport { openPhraseModal } from '../../actions/ui';\r\n\r\nexport const AddButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch( openPhraseModal() )\r\n    }\r\n\r\n    return (\r\n        <motion.button className=\"add-btn\" onClick={ handleOpenModal } whileTap={{scale:1.2}} whileHover={{scale:1.1}}>\r\n            {/* <i class=\"fas fa-plus-circle add-icon\"></i> */}\r\n            <i className=\"fas fa-pen-alt\"></i>\r\n            Nueva frase\r\n        </motion.button>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { motion } from 'framer-motion';\r\nimport Swal from 'sweetalert2';\r\nimport { startDeletePhrase, startGetAllPhrases, startSavePhrase } from '../../actions/phrases';\r\nimport { openUpdatePhraseModal } from '../../actions/ui';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const CardPhrase = ({phrase, date, username, userId, phraseId}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    \r\n    useEffect(() => {\r\n        dispatch( startGetAllPhrases() );\r\n        AOS.init();\r\n        AOS.refresh();\r\n    }, [dispatch])\r\n\r\n    const usernameAxios = useRef('')\r\n\r\n    useEffect(() => {\r\n        if( username === undefined ){\r\n            axios.get(`${process.env.REACT_APP_API_URL}/user/name/${userId}`, {\r\n                headers: {\r\n                    'x-token': localStorage.getItem('token'),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then( res => usernameAxios.current = res.data.name)\r\n            .catch(err => console.log(err))\r\n        }\r\n    }, [username, userId])\r\n\r\n    const newDate = moment(date).format('DD/MM/YYYY');\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText( phrase )\r\n        Swal.fire('Frase copiada 👻')\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeletePhrase( phraseId )  );\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        dispatch( openUpdatePhraseModal({\r\n            phrase,\r\n            date,\r\n            username,\r\n            userId,\r\n            phraseId\r\n        }) );\r\n    }\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSavePhrase( phraseId ) );\r\n    }\r\n\r\n    const profileUrl = `/user/${userId}`;\r\n\r\n    if( usernameAxios === ''){\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n       <>\r\n            <div className=\"card-wrapper\">\r\n                <article>\r\n                    <div className=\"card animate__animated animate__fadeIn\" >\r\n                        <div className=\"card-header\">\r\n                            { username !== undefined\r\n                            ? <Link className=\"to\" to={profileUrl}><span><i className=\"fas fa-user-circle\"></i> @{username} {(userId === uid ? \"(Tú)\" : \"\")} </span></Link>\r\n                            : <Link className=\"to\" to={profileUrl}><span><i className=\"far fa-id-card\"></i> Ver creador</span></Link>\r\n                            //<Link to={profileUrl}><span>@{usernameAxios.current}</span></Link>\r\n                            }\r\n                            <p>{newDate}</p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            \"{phrase}\"\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                        { userId === uid &&\r\n                        <motion.button \r\n                                className=\"card-btn\"\r\n                                whileTap={{scale:1.2}} \r\n                                whileHover={{scale:1.2}}\r\n                                onClick={ handleDelete }\r\n                            >\r\n                                <i className=\"fas fa-trash-alt\"></i>\r\n                            </motion.button>}\r\n                            { userId === uid &&\r\n                            <motion.button \r\n                                className=\"card-btn\"\r\n                                whileTap={{scale:1.2}} \r\n                                whileHover={{scale:1.2}}\r\n                                onClick={ handleOpen }\r\n                            >\r\n                                <i className=\"fas fa-edit\"></i>\r\n                            </motion.button>}                    \r\n                            <motion.button \r\n                                className=\"card-btn\"\r\n                                whileTap={{scale:1.2}} \r\n                                whileHover={{scale:1.2}}\r\n                                onClick={ handleCopy }\r\n                            >\r\n                                <i className=\"fas fa-copy\"></i>\r\n                            </motion.button>\r\n                            { userId !== uid &&\r\n                                <motion.button \r\n                                    className=\"card-btn\"\r\n                                    whileTap={{scale:1.2}} \r\n                                    whileHover={{scale:1.2}}\r\n                                    onClick={ handleSave }\r\n                                >\r\n                                    <i className=\"fas fa-bookmark\"></i>\r\n                                </motion.button>}\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n       </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value,\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { useDispatch } from 'react-redux'\r\nimport { closePhraseModal } from '../../actions/ui';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { createNewPhrase } from '../../actions/phrases';\r\n\r\nconst Modal = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formValues , handleInputChange ] = useForm({\r\n    phrase: '',\r\n  })\r\n\r\n  const { phrase } = formValues;\r\n\r\n  const handleClose = () => {\r\n    dispatch( closePhraseModal() );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //VALIDACIONES\r\n    dispatch( createNewPhrase(phrase) );\r\n    dispatch( closePhraseModal() );\r\n}\r\n\r\n    const [ chars, setChars ] = useState(0);\r\n    const [ disabled, setDisabled ] = useState(true);\r\n\r\n    useEffect(() => {\r\n       \r\n      setChars(phrase.length);\r\n      if( phrase.length >= 0 && phrase.length <= 15 ){\r\n          setDisabled(true);\r\n      } else {\r\n          setDisabled(false);\r\n      }\r\n      if( phrase.length > 150 ){\r\n          setDisabled(true);\r\n      }\r\n\r\n  }, [phrase])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div \r\n          className=\"modal-content animate__animated animate__fadeIn\"\r\n        >\r\n          <motion.button \r\n            className=\"modal-close\" \r\n            onClick={ handleClose } \r\n            whileTap={{scale:1.2}}\r\n            whileHover={{scale:1.2}}\r\n          ><GrClose /></motion.button>\r\n            <h2>Nueva frase</h2>\r\n              <form onSubmit={handleSubmit}>\r\n                  <textarea \r\n                      name=\"phrase\" \r\n                      className=\"phrase\" \r\n                      placeholder=\"Escribe tu frase\"\r\n                      onChange={  handleInputChange }\r\n                      value={ phrase }\r\n                  ></textarea>\r\n                  <span className=\"chars\">{chars} / 150</span>\r\n                  <motion.button className=\"submit\" type=\"submit\" disabled={ disabled } whileTap={{scale:1.1}}>\r\n                      Publicar\r\n                  </motion.button>\r\n              </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ModalPortal(){\r\n  return ReactDOM.createPortal(<Modal />, document.getElementById('modal-root'))\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeUpdatePhraseModal } from '../../actions/ui';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startUpdateUserPhrase } from '../../actions/phrases';\r\n\r\nconst ModalUpdate = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { selectedToUpdate } = useSelector(state => state.ui)\r\n\r\n  const [ formValues , handleInputChange ] = useForm({\r\n    phraseToUpdate: selectedToUpdate.phrase,\r\n  })\r\n\r\n  const { phraseToUpdate } = formValues;\r\n\r\n  const handleClose = () => {\r\n    dispatch( closeUpdatePhraseModal() );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //VALIDACIONES\r\n    dispatch( startUpdateUserPhrase(phraseToUpdate) );\r\n    dispatch( closeUpdatePhraseModal() );\r\n    }\r\n\r\n    const [ chars, setChars ] = useState(0);\r\n    const [ disabled, setDisabled ] = useState(true);\r\n\r\n    useEffect(() => {\r\n       \r\n      setChars(phraseToUpdate.length);\r\n      if( phraseToUpdate.length >= 0 && phraseToUpdate.length <= 5 ){\r\n          setDisabled(true);\r\n      } else {\r\n          setDisabled(false);\r\n      }\r\n      if( phraseToUpdate.length > 150 ){\r\n          setDisabled(true);\r\n      }\r\n\r\n  }, [phraseToUpdate])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div \r\n          className=\"modal-content animate__animated animate__fadeIn\"\r\n        >\r\n          <motion.button \r\n            className=\"modal-close\" \r\n            onClick={ handleClose } \r\n            whileTap={{scale:1.2}}\r\n            whileHover={{scale:1.2}}\r\n          ><GrClose /></motion.button>\r\n            <h2>Actualizar frase</h2>\r\n              <form onSubmit={handleSubmit}>\r\n                  <textarea \r\n                      name=\"phraseToUpdate\" \r\n                      className=\"phrase\" \r\n                      placeholder=\"Escribe tu frase\"\r\n                      onChange={  handleInputChange }\r\n                      value={ phraseToUpdate }\r\n                  ></textarea>\r\n                  <span className=\"chars\">{chars} / 150</span>\r\n                  <motion.button className=\"submit\" type=\"submit\" disabled={ disabled } whileTap={{scale:1.1}}>\r\n                      Guardar\r\n                  </motion.button>\r\n              </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ModalPortal(){\r\n  return ReactDOM.createPortal(<ModalUpdate />, document.getElementById('modal-root'))\r\n}","import { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {name} = useSelector(state => state.auth)\r\n\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const handleLogout = () => {\r\n    dispatch( startLogout() )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <motion.div className=\"logo-header\" whileTap={{scale:1.1}}>\r\n          <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n            <i className=\"fas fa-user-astronaut\"></i>\r\n            Daniel Díaz\r\n          </Link>\r\n        </motion.div>\r\n        <motion.div className=\"menu-icon\" onClick={handleClick} whileTap={{scale:1.2}}>\r\n          {!click ? <i className=\"fas fa-bars\"></i> : <i className=\"fas fa-times\"></i>}\r\n        </motion.div>\r\n        <ul className={click ? \"nav-menu active-link\" : \"nav-menu\"}>\r\n          <motion.li className=\"nav-item\" whileTap={{scale:1.1}}>\r\n            <Link\r\n              to=\"/\"\r\n              className={\r\n                pathname === \"/\" ? \"nav-links active-link\" : \"nav-links\"\r\n              }\r\n              onClick={closeMobileMenu}\r\n            >\r\n              Inicio\r\n            </Link>\r\n          </motion.li>\r\n          <motion.li className=\"nav-item\" whileTap={{scale:1.1}}>\r\n            <Link\r\n              to=\"/my-account\"\r\n              className={\r\n                pathname === \"/my-account\" ? \"nav-links user active-link\" : \"nav-links user\"\r\n              }\r\n              onClick={closeMobileMenu}\r\n            >\r\n               <i className=\"fas fa-user-circle logo-icon\"></i>\r\n               {name}\r\n            </Link>\r\n          </motion.li>\r\n          <motion.li className=\"nav-item\" whileTap={{scale:1.1}}>\r\n            <button className=\"nav-button\" onClick={ handleLogout }>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            </button>\r\n          </motion.li>\r\n        </ul>\r\n      </nav>\r\n      <div className={click ? \"responsive-menu show\" : \"responsive-menu\"}>\r\n        <div className=\"menu-head\">\r\n          <div className=\"logo\">\r\n            <i className=\"fas fa-user-circle logo-icon\"></i>\r\n            <span> {name}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"menu-body\">\r\n          <ul>\r\n            <motion.li className=\"nav-items-responsive\" whileTap={{scale:1.3}}>\r\n              <Link\r\n                to=\"/\"\r\n                className=\"nav-links-responsive\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Inicio\r\n              </Link>\r\n            </motion.li>\r\n            <motion.li className=\"nav-items-responsive\" whileTap={{scale:1.3}}>\r\n              <Link\r\n                to=\"/my-account\"\r\n                className=\"nav-links-responsive\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Mi cuenta\r\n              </Link>\r\n            </motion.li>\r\n            <motion.li className=\"nav-items-responsive\" whileTap={{scale:1.4}}>\r\n              <button className=\"nav-button-responsive\" onClick={ handleLogout } >Cerrar Sesión</button>\r\n            </motion.li>\r\n            <motion.li className=\"nav-items-responsive\" whileTap={{scale:1.4}} >\r\n              <p className=\"love\">Made with ❤️ by Daniel Díaz</p>\r\n            </motion.li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startGetAllPhrases } from '../../actions/phrases'\r\nimport { AddButton } from '../ui/AddButton'\r\nimport { CardPhrase } from '../ui/CardPhrase'\r\nimport  Modal from '../ui/Modal'\r\nimport ModalUpdate from '../ui/ModalUpdate';\r\nimport { Navbar } from '../ui/Navbar'\r\n\r\nexport const HomeScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { phrases } = useSelector(state => state.phrases);\r\n    const { modal, updateModal} = useSelector( state => state.ui);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startGetAllPhrases() )\r\n\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            { updateModal &&\r\n            <ModalUpdate />}\r\n            { modal &&\r\n            <Modal />}\r\n            <AddButton />\r\n            <main className=\"main\">\r\n                <div className=\"home-header\">\r\n                    <span><i className=\"fas fa-chevron-circle-down\"></i> Último contenido</span>\r\n                </div>\r\n                {\r\n                    phrases.map( phrase => (\r\n                        <CardPhrase key={phrase._id} phrase={phrase.phrase} date={phrase.date} username={phrase.user.name} userId={phrase.user._id} phraseId={phrase._id}/>\r\n                    ) )\r\n                }\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGetAllUserPhrases } from '../../actions/phrases';\r\nimport { CardPhrase } from '../ui/CardPhrase';\r\nimport ModalUpdate from '../ui/ModalUpdate';\r\n\r\nexport const MyPhrases = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { userPhrases } = useSelector(state => state.phrases)\r\n    const { updateModal} = useSelector( state => state.ui);\r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch( startGetAllUserPhrases() )\r\n\r\n    }, [dispatch, uid])\r\n\r\n    return (\r\n        <>  \r\n            {updateModal &&\r\n            <ModalUpdate />}\r\n            <div className=\"main-phrases\">\r\n                <div className=\"phrases-header\">\r\n                    <span><i className=\"fas fa-chevron-circle-down\"></i> Tus creaciones</span>\r\n                </div>\r\n                {\r\n                    userPhrases.map( phrase => (\r\n                        <CardPhrase key={phrase._id} phrase={phrase.phrase} date={phrase.date} username={phrase.user.name} userId={phrase.user._id} phraseId={phrase._id}/>\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState }  from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startChangeName, startChangePassword } from '../../actions/auth';\r\n\r\nexport const MyProfile = () => {\r\n\r\n    const { name, email } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, handleInputChange, reset] = useForm({\r\n        newName: '',\r\n        newPassword: ''\r\n    })\r\n\r\n    const [ nameIsOpen ,  setNameIsOpen ] = useState(false)\r\n    const [ passwordIsOpen ,  setPasswordIsOpen ] = useState(false)\r\n\r\n    const { newName, newPassword } = formValues;\r\n\r\n    const handleNameOpen = () => {\r\n        setNameIsOpen(!nameIsOpen)\r\n        setPasswordIsOpen(false)\r\n    }\r\n\r\n    const handlePasswordOpen = () => {\r\n        setPasswordIsOpen(!passwordIsOpen)\r\n        setNameIsOpen(false)\r\n    }\r\n\r\n    const handleUpdateName = (e) => {\r\n        e.preventDefault();\r\n        if( newName.length <= 3 ){\r\n            Swal.fire('Ingresa algo... mínimo 3 carácteres');\r\n            reset();\r\n        } else if( newName.toLowerCase() === name.toLowerCase() ){\r\n            Swal.fire('No puedes actualizar tu mismo nombre :P');\r\n            reset();\r\n        } else {\r\n            dispatch( startChangeName( newName  ) )\r\n        }\r\n    }\r\n\r\n    const handleUpdatePassword = (e) => {\r\n        e.preventDefault();\r\n        if( newPassword.length < 8 ){\r\n            Swal.fire('La contraseña debe ser de mínimo 8 carácteres');\r\n            reset();\r\n        } else if(newPassword.length === 0 ){\r\n            Swal.fire('Debes ingresar algo...');\r\n            reset();\r\n        } else if(newPassword === ''){\r\n            Swal.fire('Ingresa algo... mínimo 8 carácteres');\r\n            reset();\r\n        } else {\r\n            dispatch( startChangePassword( newPassword ) )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main-content-profile\">\r\n            <h2 className=\"profile-title\"><i className=\"fas fa-cog\"></i> Configuración de perfil</h2>\r\n            <div className=\"profile-flex\">\r\n                <div className=\"profile-box\">\r\n                    <p><strong>Nombre:</strong></p>\r\n                    <p className=\"profile-info\"> @{name} </p>\r\n                    <p><strong>Correo electrónico:</strong></p>\r\n                    <p className=\"profile-info\"> {email} </p>\r\n\r\n                    <motion.button\r\n                        className=\"profile-btn-modal\" \r\n                        whileTap={{ scale:1.1 }}\r\n                        onClick={ handleNameOpen }\r\n                    >\r\n                        Actualizar nombre {!nameIsOpen ? <i className=\"fas fa-chevron-circle-down\"></i> : <i className=\"fas fa-chevron-circle-up\"></i>}\r\n                    </motion.button>\r\n\r\n                    { nameIsOpen &&\r\n                    <form className=\"profile-form\" onSubmit={ handleUpdateName }>\r\n                        <input \r\n                        type=\"text\" \r\n                        className=\"profile-input\" \r\n                        placeholder=\"Nuevo nombre\"\r\n                        name=\"newName\"\r\n                        onChange={ handleInputChange }\r\n                        value={newName}\r\n                        autoComplete=\"off\"\r\n                        />\r\n                        <button type=\"submit\" className=\"profile-submit\">Guardar</button>\r\n                    </form>\r\n                    }\r\n\r\n                    <motion.button \r\n                    className=\"profile-btn-modal\" \r\n                    whileTap={{ scale:1.1 }} \r\n                    onClick={ handlePasswordOpen }\r\n                    >\r\n                        Actualizar contraseña {!passwordIsOpen ? <i className=\"fas fa-chevron-circle-down\"></i> : <i className=\"fas fa-chevron-circle-up\"></i>}\r\n                    </motion.button>\r\n\r\n                    { passwordIsOpen &&\r\n                    <form className=\"profile-form\" onSubmit={ handleUpdatePassword }>\r\n                        <input \r\n                        type=\"password\" \r\n                        className=\"profile-input\" \r\n                        placeholder=\"Nueva contraseña\"\r\n                        name=\"newPassword\"\r\n                        onChange={ handleInputChange }\r\n                        value={newPassword}\r\n                        />\r\n                        <button type=\"submit\" className=\"profile-submit\">Guardar</button>\r\n                    </form>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startGetAllSavedPhrases } from '../../actions/phrases'\r\nimport { CardPhrase } from '../ui/CardPhrase'\r\n\r\nexport const MySaves = () => {\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const { userSavedPhrases } = useSelector(state => state.phrases)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch( startGetAllSavedPhrases() )\r\n        setChecking(false)\r\n    }, [dispatch])\r\n\r\n\r\n    if( checking ) {\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-phrases\">\r\n        <div className=\"phrases-header\">\r\n                <span><i className=\"fas fa-chevron-circle-down\"></i> Tus guardadas</span>\r\n            </div>\r\n            {\r\n                userSavedPhrases.map( phrase => (\r\n                    <CardPhrase key={phrase._id} phrase={phrase.phrase} date={phrase.date}  userId={phrase.user} phraseId={phrase._id}/>\r\n                ) )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { MyPhrases } from './MyPhrases';\r\nimport { MyProfile } from './MyProfile';\r\nimport { MySaves } from './MySaves';\r\n\r\nexport const MyAccount = () => {\r\n\r\n\r\n    const [ location,  setLocation] = useState('perfil');\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <main className=\"main-account\">\r\n                <div className=\"nav-buttons\">\r\n                    <button \r\n                        className={ location === \"perfil\" ? \"nav-btn selected\" : \"nav-btn\" } \r\n                        onClick={ () => setLocation('perfil') }\r\n                    >\r\n                        <i className=\"fas fa-cog\"></i> <span>Perfil</span>\r\n                    </button>\r\n                    <button \r\n                        className={ location === \"frases\" ? \"nav-btn selected\" : \"nav-btn\" } \r\n                        onClick={ () => setLocation('frases') }\r\n                    >\r\n                        <i className=\"fas fa-user-edit\"></i>  <span>Frases creadas</span>\r\n                    </button>\r\n                    <button \r\n                        className={ location === \"guardadas\" ? \"nav-btn selected\" : \"nav-btn\" } \r\n                        onClick={ () => setLocation('guardadas') }\r\n                    >\r\n                        <i className=\"fas fa-bookmark\"></i> <span>Guardadas</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"main-content\">\r\n                    {\r\n                        location === 'perfil' &&\r\n                        <MyProfile />\r\n                    }\r\n                    {\r\n                        location === 'frases' &&\r\n                        <MyPhrases />\r\n                    }\r\n                    {\r\n                        location === 'guardadas' &&\r\n                        <MySaves />\r\n                    }\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                <a href=\"https://github.com/danield413\"><i className=\"fab fa-github\"></i> Mi Github</a>\r\n                <p><strong>Daniel Díaz Castro</strong> {new Date().getFullYear()}©</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router'\r\nimport { CardPhrase } from '../ui/CardPhrase';\r\nimport { Navbar } from '../ui/Navbar'\r\n\r\nexport const UserScreen = () => {\r\n\r\n    const {id} = useParams();\r\n    const {userPhrases} = useSelector(state => state.phrases)\r\n    \r\n    const [state, setState] = useState({\r\n        name: '',\r\n        phrases: []\r\n    })\r\n\r\n    const { name, phrases } = state;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/user/data/${id}`, {\r\n            headers: {\r\n                'x-token': localStorage.getItem('token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then( res => setState({\r\n            name: res.data.name,\r\n            phrases: res.data.phrases.reverse()\r\n        }) )\r\n    }, [id, userPhrases])\r\n\r\n    console.log(phrases);\r\n\r\n    if(name === '' && phrases.length === 0){\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <main className=\"main-user\">\r\n                <div className=\"main-header\">\r\n                    <div>\r\n                        <img src=\"https://www.personality-database.com/profile_images/3033.png?id=161577\" alt=\"usuario\"/>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"main-title\">{name}</h2>\r\n                <h2 className=\"main-title sub\">Frases Creadas: {phrases.length}</h2>\r\n                <div className=\"main\">\r\n                    {\r\n                        phrases.map((phrase) => (\r\n                            <CardPhrase\r\n                                key={phrase._id}\r\n                                phraseId={ phrase._id }\r\n                                phrase={phrase.phrase}\r\n                                username={phrase.user.name}\r\n                                userId={ phrase.user._id }\r\n                                date={ phrase.date }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //VALIDACIONES\r\n    const validation = /^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/;\r\n    if (validation.test(email) && password.length >= 8) {\r\n      dispatch(startLogin(email, password));\r\n    } else if (email === \"\" || password === \"\") {\r\n      Swal.fire(\"Hay algo vacío :P\");\r\n    } else {\r\n      Swal.fire(\"Ingresa un correo y contraseña válidos :P\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header-login\">\r\n        <div className=\"form-box-login animate__animated animate__fadeIn\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Iniciar Sesión</h1>\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Correo Electrónico\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Contraseña\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <motion.button\r\n              className=\"input-submit\"\r\n              type=\"submit\"\r\n              whileTap={{ scale: 1.3 }}\r\n            >\r\n              Ingresar\r\n            </motion.button>\r\n          </form>\r\n          <Link className=\"form-link\" to=\"/auth/register\">\r\n            O crear una nueva cuenta\r\n          </Link>\r\n          <p className=\"love\">Made with ❤️ by Daniel Díaz</p>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password1, password2 } = formValues;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //VALIDACIONES\r\n    const validation = /^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/;\r\n    if (email === \"\" || password1 === \"\" || password2 === \"\" || name === \"\") {\r\n      Swal.fire(\"Hay algo vacío :P\");\r\n    } else if (name.indexOf(\" \") !== -1) {\r\n      Swal.fire(\"No se permiten espacios en el nombre de usuario\");\r\n    } else if (\r\n      validation.test(email) &&\r\n      password1.length >= 8 &&\r\n      password2.length >= 8 &&\r\n      password1 === password2\r\n    ) {\r\n      dispatch(startRegister(name, email, password1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header-login\">\r\n        <div className=\"form-box-login register animate__animated animate__fadeIn\">\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Registrarse</h1>\r\n\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Nombre\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Correo Electrónico\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"password\"\r\n              name=\"password1\"\r\n              placeholder=\"Contraseña\"\r\n              value={password1}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              className=\"input-login\"\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              placeholder=\"Repetir contraseña\"\r\n              value={password2}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <motion.button\r\n              className=\"input-submit\"\r\n              type=\"submit\"\r\n              whileTap={{ scale: 1.3 }}\r\n            >\r\n              Ingresar\r\n            </motion.button>\r\n          </form>\r\n          <Link className=\"form-link\" to=\"/auth/login\">\r\n            O crear una nueva cuenta\r\n          </Link>\r\n          <p className=\"love\">Made with ❤️ by Daniel</p>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect,} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n\r\n                <Route\r\n                    path=\"/auth/login\"\r\n                    component={ LoginScreen }\r\n                />\r\n\r\n                {/* Main Route */}\r\n                <Route\r\n                    path=\"/auth/register\"\r\n                    component={ RegisterScreen }\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { HomeScreen } from '../components/home/HomeScreen';\r\n\r\nimport { MyAccount } from '../components/home/MyAccount';\r\nimport { Footer } from '../components/ui/Footer';\r\nimport { UserScreen } from '../components/user/UserScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    //se verifica el token cada vez que se renderiza de nuevo el AppRouter\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if( checking ) {\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n\r\n                <PublicRoute\r\n                    isAuthenticated={ !!uid }\r\n                    path=\"/auth\"\r\n                    component={ AuthRouter }\r\n                />\r\n\r\n                <PrivateRoute\r\n                    isAuthenticated={ !!uid }\r\n                    exact\r\n                    path=\"/\"\r\n                    component={ HomeScreen }\r\n                />\r\n\r\n                <PrivateRoute \r\n                    isAuthenticated={ !!uid }\r\n                    exact\r\n                    path=\"/my-account\"\r\n                    component={ MyAccount }\r\n                />\r\n\r\n                <PrivateRoute\r\n                    isAuthenticated={ !!uid }\r\n                    exact\r\n                    path=\"/user/:id\"\r\n                    component={ UserScreen }\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        case types.authChangeName:\r\n            return{\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    phrases: [],\r\n    userPhrases: [],\r\n    userSavedPhrases: []\r\n}\r\n\r\nexport const phrasesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.phrasesGetAll:\r\n            return{\r\n                ...state,\r\n                phrases: action.payload\r\n            }\r\n        case types.phrasesDeletedPhrase:\r\n            return{\r\n                ...state,\r\n                phrases: state.phrases.filter( phrase => phrase._id !== action.payload ),\r\n                userPhrases: state.userPhrases.filter( userPhrase => userPhrase._id !== action.payload )\r\n            }\r\n        case types.phrasesGetAllUser:\r\n            return{\r\n                ...state,\r\n                userPhrases: action.payload\r\n            }\r\n        case types.phrasesGetSaved:\r\n            return{\r\n                ...state,\r\n                userSavedPhrases: action.payload\r\n            }\r\n        case types.phrasesLogout:\r\n            return{\r\n                phrases: [],\r\n                userPhrases: [],\r\n                userSavedPhrases: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modal: false,\r\n    updateModal: false,\r\n    selectedToUpdate: {\r\n        phrase: '',\r\n        date: new Date().getTime(),\r\n        username: '',\r\n        userId: '',\r\n        phraseId: ''\r\n    }\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n           \r\n        case types.uiOpenPhraseModal:\r\n            return{\r\n                ...state,\r\n                modal: true\r\n            }\r\n        case types.uiClosePhraseModal:\r\n            return{\r\n                ...state,\r\n                modal: false\r\n            }\r\n        case types.uiOpenUpdatePhraseModal:\r\n            return{\r\n                ...state,\r\n                updateModal: true,\r\n                selectedToUpdate: action.payload\r\n            }\r\n        case types.uiCloseUpdatePhraseModal:\r\n            return{\r\n                ...state,\r\n                updateModal: false,\r\n                selectedToUpdate: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { phrasesReducer } from '../reducers/phrasesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    phrases: phrasesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport 'normalize.css';\r\nimport './scss/styles.scss';\r\nimport 'animate.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const FrasesApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FrasesApp } from './FrasesApp';\n\n\nReactDOM.render(\n    <FrasesApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}